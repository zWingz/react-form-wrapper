{"version":3,"sources":["webpack:///./src/store.ts","webpack:///./src/WrappedItem.tsx","webpack:///./src/index.tsx","webpack:///./doc/index.mdx"],"names":["Store","defaultState","arguments","length","undefined","_classCallCheck","this","_selfState","_chain","Object","assign","objectToChain","getState","bind","set","get","obj","_this","prefix","track","keys","ret","forEach","each","value","chainKey","concat","prototype","toString","call","prop","getPrototypeOf","isPlain","state","_objectSpread","chain","path","tmp","indexOf","keyPath","split","parentKey","slice","join","pop","deepMax","index","defaultValue","typeOf","arg","type","_typeof","WrappedItem","React","_this$props","props","element","stateKey","_this$props$wrapperPr","wrapperProp","val","onChange","wrappedOpt","_wrappedOpt$valueProp","valuePropName","_wrappedOpt$eventTrig","eventTrigger","originOnChange","valueProp","WrappedItem_defineProperty","getValue","changeProp","e","getValueFromEvent","target","react","displayName","__docgenInfo","description","name","required","STORYBOOK_REACT_CLASSES","docgenInfo","__react_docgen_typescript_loader_error","FormWrapperHoc","Wrapped","initialState","_React$PureComponent","FormWrapped","_getPrototypeOf2","src_classCallCheck","_len","args","Array","_key","src_possibleConstructorReturn","src_getPrototypeOf","apply","store","setWrapperState","callback","replace","src_objectSpread","forceUpdate","itemWrapper","key","opt","WrappedItem_WrappedItem","_onChange","src_inherits","getRef","formWrapper","MDXContent","doc_classCallCheck","doc_possibleConstructorReturn","doc_getPrototypeOf","layout","Component","components","_objectWithoutProperties","react_default","a","createElement","dist","id","parentName","className","align","index_m","__position","__code","__scope","TestHoc","Test","doc_inherits","PureComponent","doc_createClass","_this$props$formWrapp","Input","inp","style","marginLeft","MyForm","_React$PureComponent2","checked","_React$PureComponent3","_this$props$formWrapp2","Checkbox","_React$PureComponent4","_this$props$formWrapp3","_React$PureComponent5","_this$props$formWrapp4","Comp","username","component","CustomForm","_React$PureComponent6","_this2","onClick","doc_assertThisInitialized","customTrigger","Date","toUTCString","_React$PureComponent7","_this$props$formWrapp5","DateValue","date"],"mappings":"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","file":"static/js/doc-index.825ac02f.js","sourcesContent":["interface PlainObject {\n  [key: string]: any\n}\n\n// function isUndefined(obj) {\n//   return typeof obj === 'undefined'\n// }\n\nfunction isPlain(obj) {\n  if (!obj || Object.prototype.toString.call(obj) !== '[object Object]') {\n    return false\n  }\n  const prop = Object.getPrototypeOf(obj)\n  return prop === null || prop === Object.prototype\n}\n\nexport default class Store<T extends PlainObject = PlainObject> {\n  private _selfState: T\n  // private hadSetDefaultValue: string[] = []\n  private _chain: PlainObject = {}\n  // private shouldSetDefault = (key, value, defaultValue?) => {\n  //   return (\n  //     isUndefined(value) &&\n  //     !isUndefined(defaultValue) &&\n  //     this.hadSetDefaultValue.indexOf(key) === -1\n  //   )\n  // }\n  private objectToChain(obj, prefix: string = '', track = {}) {\n    const keys = Object.keys(obj)\n    const ret = {}\n    keys.forEach(each => {\n      const value = obj[each]\n      const chainKey = prefix ? `${prefix}.${each}` : each\n      track[chainKey] = value\n      if (isPlain(value)) {\n        ret[each] = this.objectToChain(value, chainKey, track)\n      } else {\n        ret[each] = value\n      }\n    })\n    return ret\n  }\n  constructor(defaultState: T = {} as T) {\n    this._selfState = Object.assign({}, defaultState)\n    this._chain = this.objectToChain(this._selfState)\n    this.getState = this.getState.bind(this)\n    this.set = this.set.bind(this)\n    this.get = this.get.bind(this)\n  }\n\n  public getState() {\n    return Object.assign({}, this._selfState)\n  }\n\n  public replace(state) {\n    this._selfState = {\n      ...this._selfState,\n      ...state\n    }\n    const chain = {}\n    this.objectToChain(this._selfState, '', chain)\n    this._chain = chain\n  }\n  public set(path: string, value: any) {\n    const { _chain, _selfState } = this\n    let tmp = _selfState\n    if (path.indexOf('.') !== -1) {\n      const keyPath = path.split('.')\n      if(path in _chain) {\n        const parentKey = keyPath.slice(0, -1).join('.')\n        _chain[parentKey][keyPath.pop()] = value\n      } else {\n        const deepMax = keyPath.length - 1\n        keyPath.forEach((each, index) => {\n          if (index === deepMax) {\n            tmp[each] = value\n          } else {\n            if (typeof tmp[each] === 'undefined') {\n              tmp[each] = {}\n            }\n            _chain[keyPath.slice(0, index + 1).join('.')] = tmp[each]\n            tmp = tmp[each]\n          }\n        })\n      }\n    } else {\n      tmp[path] = value\n    }\n    _chain[path] = value\n  }\n\n  public get(path: string, defaultValue?) {\n    const { _chain: chain, set } = this\n    // if (shouldSetDefault(path, val, defaultValue)) {\n    //   set(path, defaultValue)\n    //   hadSetDefaultValue.push(path)\n    // } else\n    if (!(path in chain)) {\n      set(path, defaultValue)\n    }\n    return chain[path]\n\n    // if (path.indexOf('.') !== -1) {\n    //   const keyPath = path.split('.')\n    //   const { length } = keyPath\n    //   const deepMax = length - 1\n    //   let tmp = this.selfState\n    //   for (let i = 0; i < length; i++) {\n    //     const each = keyPath[i]\n    //     if (i === deepMax) {\n    //       if (shouldSetDefault(path, tmp[each], defaultValue)) {\n    //         tmp[each] = defaultValue\n    //         hadSetDefaultValue.push(path)\n    //       }\n    //       val = tmp[each]\n    //     } else {\n    //       if (typeof tmp[each] === 'undefined') {\n    //         if (isUndefined(defaultValue)) {\n    //           return undefined\n    //         }\n    //         tmp[each] = {}\n    //       }\n    //       tmp = tmp[each]\n    //     }\n    //   }\n    // } else {\n    //   if (shouldSetDefault(path, this.selfState[path], defaultValue)) {\n    //     hadSetDefaultValue.push(path)\n    //     this.selfState[path] = defaultValue\n    //   }\n    //   val = this.selfState[path]\n    // }\n    // return val\n  }\n}\n","import * as React from 'react'\nimport { FormItemWrapperOpt } from '.'\nexport interface WrappedItemProp {\n  element: JSX.Element\n  stateKey: string\n  val: any\n  onChange: (key, value) => any\n  wrapperProp: FormItemWrapperOpt & {\n    originOnChange?: (e) => void\n  }\n}\n\nfunction typeOf(arg, type) {\n  return typeof arg === type\n}\n\nfunction getValue(val: any, element: JSX.Element) {\n  const { type } = element\n  if (!(typeOf(val, 'undefined') && typeOf(type, 'string'))) {\n    return val\n  }\n  return ['input', 'textarea'].indexOf(type as string) !== -1 ? '' : val\n}\n\nexport default class WrappedItem extends React.PureComponent<WrappedItemProp> {\n  render() {\n    const { element, stateKey, wrapperProp = {}, val, onChange } = this.props\n    const wrappedOpt = Object.assign({}, wrapperProp)\n    const { valuePropName = 'value', eventTrigger = 'onChange' } = wrappedOpt\n    if (element.props[eventTrigger]) {\n      wrappedOpt.originOnChange = element.props[eventTrigger]\n    }\n    const valueProp = {\n      [valuePropName]: getValue(val, element)\n    }\n    const changeProp = {\n      [eventTrigger]: e => {\n        const { getValueFromEvent } = wrappedOpt\n        let value = ''\n        if (getValueFromEvent) {\n          value = getValueFromEvent(e)\n        } else if (e && e.target) {\n          value = e.target[wrappedOpt.valuePropName || 'value']\n        } else {\n          value = e\n        }\n        onChange(stateKey, value)\n        if (wrappedOpt.originOnChange) {\n          wrappedOpt.originOnChange(e)\n        }\n      }\n    }\n    return <element.type {...element.props} {...valueProp} {...changeProp} />\n  }\n}\ntry {\n    // @ts-ignore\n    WrappedItem.displayName = \"WrappedItem\";\n    // @ts-ignore\n    WrappedItem.__docgenInfo = { \"description\": \"\", \"displayName\": \"WrappedItem\", \"props\": { \"element\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"element\", \"required\": true, \"type\": { \"name\": \"Element\" } }, \"stateKey\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"stateKey\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"val\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"val\", \"required\": true, \"type\": { \"name\": \"any\" } }, \"onChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onChange\", \"required\": true, \"type\": { \"name\": \"(key: any, value: any) => any\" } }, \"wrapperProp\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"wrapperProp\", \"required\": true, \"type\": { \"name\": \"FormItemWrapperOpt & { originOnChange?: (e: any) => void; }\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/WrappedItem.tsx#WrappedItem\"] = { docgenInfo: WrappedItem.__docgenInfo, name: \"WrappedItem\", path: \"src/WrappedItem.tsx#WrappedItem\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport Store from './store'\nimport WrappedpedItem from './WrappedItem'\ntype PlainObject = {\n  [key: string]: any\n}\n\nexport interface FormItemWrapperOpt {\n  valuePropName?: string\n  getValueFromEvent?: (e: any) => any\n  defaultValue?: any\n  eventTrigger?: string\n}\n\nexport interface FormItemWrapper {\n  (key: string, props?: FormItemWrapperOpt): (\n    element: JSX.Element\n  ) => JSX.Element\n}\n\nexport interface FormWrapperHocRef<T = any> {\n  setWrapperState: (state: T) => void\n  getState: () => T\n}\n\nexport interface FormWrapperHocProp<T extends PlainObject = PlainObject> {\n  formWrapper: {\n    getState: () => T;\n    setWrapperState: (state: { [P in keyof T]?: T[P] }) => void;\n    itemWrapper: FormItemWrapper;\n  }\n}\n\ntype PropWithRef<P> = P & {\n  getRef?: (arg: FormWrapperHocRef) => void;\n}\nexport default function FormWrapperHoc<P = any, T extends PlainObject = PlainObject>(\n  Wrapped: React.ComponentType<any>,\n  initialState: T = {} as T\n): React.ComponentClass<PropWithRef<P>> {\n  return class FormWrapped extends React.PureComponent<PropWithRef<P>, any> {\n\n    store = new Store<T>(initialState)\n\n    setWrapperState = (state: PlainObject, callback?) => {\n      this.store.replace({\n        ...state\n      })\n      this.forceUpdate(callback)\n    }\n\n    itemWrapper: FormItemWrapper = (key, opt = {}) => element => {\n      const val = this.store.get(key, opt.defaultValue)\n      return (\n        <WrappedpedItem\n          element={element}\n          stateKey={key}\n          val={val}\n          wrapperProp={opt}\n          onChange={this._onChange}\n        />\n      )\n    }\n\n    _onChange = (key, val) => {\n      this.store.set(key, val)\n      this.forceUpdate()\n    }\n    componentDidMount() {\n      const { setWrapperState, props } = this\n      const { getRef } = props\n      getRef &&\n        getRef({\n          setWrapperState,\n          getState: this.store.getState\n        })\n    }\n    render() {\n      const { itemWrapper, setWrapperState, store } = this\n      return (\n        <Wrapped\n          {...this.props}\n          formWrapper={{\n            itemWrapper,\n            setWrapperState,\n            getState: store.getState\n          }}\n        />\n      )\n    }\n  }\n}\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground } from 'docz'\nimport FormWrapperHoc from '../src'\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"react-form-wrapper\"}}>{`React Form Wrapper`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"base-usage\"}}>{`Base Usage`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`npm install @zzwing/react-form-wrapper`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-typescript\"}}>{`import FormWrapperHoc from '@zzwing/react-form-wrapper'\nFormWrapperHoc(WrappedComponent, defaultState)\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"formwrapper-props\"}}>{`FormWrapper props`}</MDXTag>\n<MDXTag name=\"table\" components={components}>\n<MDXTag name=\"thead\" components={components} parentName=\"table\">\n<MDXTag name=\"tr\" components={components} parentName=\"thead\">\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`name`}</MDXTag>\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`type`}</MDXTag>\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`desc`}</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"tbody\" components={components} parentName=\"table\">\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`itemWrapper`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`(element: JSX.Element, opt: FormItemWrapperOpt) => JSX.Element`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`wrap component like antd-form`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`getState`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`() => state`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`getState from wrapper`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`setWrapperState`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`(state, callback) => void`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`setState like React.setState`}</MDXTag>\n</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"formitemwrapperopt\"}}>{`FormItemWrapperOpt`}</MDXTag>\n<MDXTag name=\"table\" components={components}>\n<MDXTag name=\"thead\" components={components} parentName=\"table\">\n<MDXTag name=\"tr\" components={components} parentName=\"thead\">\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`name`}</MDXTag>\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`type`}</MDXTag>\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`desc`}</MDXTag>\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`default`}</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"tbody\" components={components} parentName=\"table\">\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`valuePropName`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`string`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`name for `}<MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`value`}</MDXTag>{` prop`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}><MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`value`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`getValueFromEvent`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`(e: any) => any`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`change event to value`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`(e) => e.target`}{`[`}{`valuePropName`}{`]`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`defaultValue`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`any`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`set defaultValue when `}<MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`value`}</MDXTag>{` is `}<MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`undefined`}</MDXTag></MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}><MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`undefined`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`eventTrigger`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`string`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`listening for `}<MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`value`}</MDXTag>{` changed`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}><MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`onChange`}</MDXTag></MDXTag>\n</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-typescript\"}}>{`import * as React from 'react'\nimport FormWrapperHoc, { FormWrapperHocProp } from '@zzwing/react-form-wrapper'\n\nclass Form extends React.PureComponent<FormWrapperHocProp> {\n  render() {\n    const { itemWrapper, getState } = this.props.formWrapper\n    // use itemWrapper to wrap sub-comp\n    const Input = itemWrapper('valueKey')(<input />)\n    const value = getState().valueKey\n    return (\n      <>\n        {Input}\n        you can get value for {value}\n      </>\n    )\n  }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"demo\"}}>{`Demo`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"base\"}}>{`base`}</MDXTag>\n<Playground __position={0} __code={'() => {\\n  class Test extends React.PureComponent {\\n    render() {\\n      const { itemWrapper, getState } = this.props.formWrapper\\n      const Input = itemWrapper(\\'inp\\')(<input />)\\n      const inp = getState().inp\\n      return (\\n        <div>\\n          <label>\\n            input: <span style={{ marginLeft: \\'10px\\' }}>{Input}</span>\\n          </label>\\n          <p>output: {inp}</p>\\n        </div>\\n      )\\n    }\\n  }\\n  const TestHoc = FormWrapperHoc(Test)\\n  return <TestHoc />\\n}'} __scope={{props: this ? this.props : props,FormWrapperHoc}}>\n  {() => {\n    class Test extends React.PureComponent {\n      render() {\n        const { itemWrapper, getState } = this.props.formWrapper\n        const Input = itemWrapper('inp')(<input />)\n        const inp = getState().inp\n        return (\n          <div>\n            <label>\n              input: <span style={{ marginLeft: '10px' }}>{Input}</span>\n            </label>\n            <p>output: {inp}</p>\n          </div>\n        )\n      }\n    }\n    const TestHoc = FormWrapperHoc(Test)\n    return <TestHoc />\n  }}\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"with-valuepropname-and-getvaluefromevent\"}}>{`with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h3\">{`valuePropName`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h3\">{`getValueFromEvent`}</MDXTag></MDXTag>\n<Playground __position={1} __code={'() => {\\n  class MyForm extends React.PureComponent {\\n    render() {\\n      return (\\n        <input\\n          type=\\\"checkbox\\\"\\n          checked={this.props.checked || false}\\n          onChange={this.props.onChange}\\n        />\\n      )\\n    }\\n  }\\n  class Test extends React.PureComponent {\\n    render() {\\n      const { itemWrapper, getState } = this.props.formWrapper\\n      // set valuePropName and getValueFromEvent\\n      const Checkbox = itemWrapper(\\'checked\\', {\\n        valuePropName: \\'checked\\',\\n        getValueFromEvent(e) {\\n          return e.target.checked\\n        },\\n      })(<MyForm />)\\n      const { checked } = getState()\\n      return (\\n        <div>\\n          <label>\\n            checkbox: <span style={{ marginLeft: \\'10px\\' }}>{Checkbox}</span>\\n          </label>\\n          <p>output: {checked ? \\'true\\' : \\'false\\'}</p>\\n        </div>\\n      )\\n    }\\n  }\\n  const TestHoc = FormWrapperHoc(Test)\\n  return <TestHoc />\\n}'} __scope={{props: this ? this.props : props,FormWrapperHoc}}>\n  {() => {\n    class MyForm extends React.PureComponent {\n      render() {\n        return <input type='checkbox' checked={this.props.checked || false} onChange={this.props.onChange}/>\n      }\n    }\n    class Test extends React.PureComponent {\n      render() {\n        const { itemWrapper, getState } = this.props.formWrapper\n        // set valuePropName and getValueFromEvent\n        const Checkbox = itemWrapper('checked', {\n          valuePropName: 'checked',\n          getValueFromEvent(e) {\n            return e.target.checked\n          }\n        })(<MyForm />)\n        const {checked} = getState()\n        return (\n          <div>\n            <label>\n              checkbox: <span style={{ marginLeft: '10px' }}>{Checkbox}</span>\n            </label>\n            <p>output: {checked ? 'true' : 'false'}</p>\n          </div>\n        )\n      }\n    }\n    const TestHoc = FormWrapperHoc(Test)\n    return <TestHoc />\n  }}\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"with-defaultvalue\"}}>{`with defaultValue`}</MDXTag>\n<Playground __position={2} __code={'() => {\\n  class Test extends React.PureComponent {\\n    render() {\\n      const { itemWrapper, getState } = this.props.formWrapper\\n      // set defaultValue\\n      const Input = itemWrapper(\\'inp\\', {\\n        defaultValue: \\'default input\\',\\n      })(<input />)\\n      const inp = getState().inp\\n      return (\\n        <div>\\n          <label>\\n            input: <span style={{ marginLeft: \\'10px\\' }}>{Input}</span>\\n          </label>\\n          <p>output: {inp}</p>\\n        </div>\\n      )\\n    }\\n  }\\n  const TestHoc = FormWrapperHoc(Test)\\n  return <TestHoc />\\n}'} __scope={{props: this ? this.props : props,FormWrapperHoc}}>\n  {() => {\n    class Test extends React.PureComponent {\n      render() {\n        const { itemWrapper, getState } = this.props.formWrapper\n        // set defaultValue\n        const Input = itemWrapper('inp', {\n          defaultValue: 'default input'\n        })(<input />)\n        const inp = getState().inp\n        return (\n          <div>\n            <label>\n              input: <span style={{ marginLeft: '10px' }}>{Input}</span>\n            </label>\n            <p>output: {inp}</p>\n          </div>\n        )\n      }\n    }\n    const TestHoc = FormWrapperHoc(Test)\n    return <TestHoc />\n  }}\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"with-defaultstate\"}}>{`with defaultState`}</MDXTag>\n<Playground __position={3} __code={'() => {\\n  class Test extends React.PureComponent {\\n    render() {\\n      const { itemWrapper, getState } = this.props.formWrapper\\n      const Input = itemWrapper(\\'username\\')(<input />)\\n      const Comp = itemWrapper(\\'component\\')(<input />)\\n      const inp = getState().username\\n      const component = getState().component\\n      return (\\n        <div>\\n          <label>\\n            input: <span style={{ marginLeft: \\'10px\\' }}>{Input}</span>\\n          </label>\\n          <label style={{ marginLeft: \\'10px\\' }}>\\n            Comp: <span style={{ marginLeft: \\'10px\\' }}>{Comp}</span>\\n          </label>\\n          <p>username: {inp}</p>\\n          <p>component: {component}</p>\\n        </div>\\n      )\\n    }\\n  }\\n  // set defaultState in FormWrapperHoc\\n  const TestHoc = FormWrapperHoc(Test, {\\n    username: \\'zwing\\',\\n    component: \\'react-form-wrapper\\',\\n  })\\n  return <TestHoc />\\n}'} __scope={{props: this ? this.props : props,FormWrapperHoc}}>\n  {() => {\n    class Test extends React.PureComponent {\n      render() {\n        const { itemWrapper, getState } = this.props.formWrapper\n        const Input = itemWrapper('username')(<input />)\n        const Comp = itemWrapper('component')(<input />)\n        const inp = getState().username\n        const component = getState().component\n        return (\n          <div>\n            <label>\n              input: <span style={{ marginLeft: '10px' }}>{Input}</span>\n            </label>\n            <label style={{ marginLeft: '10px' }}>\n              Comp: <span style={{ marginLeft: '10px' }}>{Comp}</span>\n            </label>\n            <p>username: {inp}</p>\n            <p>component: {component}</p>\n          </div>\n        )\n      }\n    }\n    // set defaultState in FormWrapperHoc\n    const TestHoc = FormWrapperHoc(Test, {\n      username: 'zwing',\n      component: 'react-form-wrapper'\n    })\n    return <TestHoc />\n  }}\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"with-eventtrigger\"}}>{`with eventTrigger`}</MDXTag>\n<Playground __position={4} __code={'() => {\\n  class CustomForm extends React.PureComponent {\\n    constructor() {\\n      this.onClick = this.onClick.bind(this)\\n    }\\n    onClick() {\\n      this.props.customTrigger(new Date())\\n    }\\n    render() {\\n      const { value } = this.props\\n      return (\\n        <div>\\n          {value ? value.toUTCString() : \\'\\'}\\n          <button onClick={this.onClick}>change date</button>\\n        </div>\\n      )\\n    }\\n  }\\n  class Test extends React.PureComponent {\\n    render() {\\n      const { itemWrapper, getState } = this.props.formWrapper\\n      const DateValue = itemWrapper(\\'date\\', {\\n        eventTrigger: \\'customTrigger\\',\\n      })(<CustomForm />)\\n      const { date } = getState()\\n      return (\\n        <div>\\n          <label>\\n            CustomTrigger:\\n            {DateValue}\\n          </label>\\n          <div>Value: {date ? date.toUTCString() : \\'\\'}</div>\\n        </div>\\n      )\\n    }\\n  }\\n\\n  const Wrapped = FormWrapperHoc(Test)\\n  return <Wrapped />\\n}'} __scope={{props: this ? this.props : props,FormWrapperHoc}}>\n  {\n    () => {\n      class CustomForm extends React.PureComponent {\n        constructor() {\n          this.onClick = this.onClick.bind(this)\n        }\n        onClick() {\n          this.props.customTrigger(new Date())\n        }\n        render() {\n          const { value } = this.props\n          return <div>\n            { value ? value.toUTCString() : '' }\n            <button onClick={this.onClick}>change date</button>\n          </div>\n        }\n      }\n  class Test extends React.PureComponent {\n    render() {\n      const { itemWrapper, getState } = this.props.formWrapper\n      const DateValue = itemWrapper('date', {\n        eventTrigger: 'customTrigger'\n      })(<CustomForm />)\n      const { date } = getState()\n      return <div>\n        <label>\n          CustomTrigger:\n          {\n            DateValue\n          }\n        </label>\n        <div>\n          Value: { date ? date.toUTCString() : '' }\n        </div>\n      </div>\n    }\n  }\n\n  const Wrapped = FormWrapperHoc(Test)\n  return <Wrapped />\n}\n}\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"types\"}}>{`Types`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-typescript\"}}>{`type PlainObject = {\n  [key: string]: any;\n}\n\ninterface FormItemWrapperOpt {\n  valuePropName?: string\n  getValueFromEvent?: (e: any) => any\n  defaultValue?: any\n  eventTrigger?: string\n}\n\n interface FormItemWrapper {\n  (key: string, props?: FormItemWrapperOpt): (\n    element: JSX.Element\n  ) => JSX.Element\n}\n\ninterface FormWrapperHocRef<T = any> {\n  setWrapperState: (state: T) => void\n  getState: () => T\n}\n\ntype PropWithRef<P> = P & {\n  getRef?: (arg: FormWrapperHocRef) => void;\n}\n\nfunction FormWrapperHoc<\n    P = any,\n    T extends PlainObject = PlainObject\n  >(\n    Wrapped: React.ComponentType<any>,\n    initialState?: T\n  ): React.ComponentClass<PropWithRef<P>>\n}\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}